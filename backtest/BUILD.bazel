load("@io_bazel_rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
load("@rules_spring//springboot:springboot.bzl", "springboot")

deps = [
    "@maven//:org_springframework_boot_spring_boot_starter_webflux",
    "@maven//:org_jetbrains_kotlinx_kotlinx_coroutines_reactor",
    "@maven//:com_fasterxml_jackson_module_jackson_module_kotlin",
    "@maven//:io_springfox_springfox_boot_starter",
]

runtime_deps = [
    "@maven//:org_springframework_boot_spring_boot_loader",
    "@maven//:org_jetbrains_kotlin_kotlin_reflect",
    "@maven//:org_jetbrains_kotlin_kotlin_stdlib_common",
]

kt_jvm_library(
    name = "kotlinapp_lib",
    srcs = glob(["src/main/kotlin/**/*.kt"]),
    plugins = [
        "//common/kotlin:allopen_plugin",
#        "//common/kotlin:no_arg_plugin",
#        "//common/kotlin:serialization_plugin",
    ],
    resources = glob(["src/main/resources/**/*"]),
    runtime_deps = runtime_deps,
    deps = deps,
)

springboot(
    name = "backtest",
    boot_app_class = "com.exnight.backtest.BacktestAppKt",
    fail_on_duplicate_classes = False,
    java_library = ":kotlinapp_lib",
    deps = deps + runtime_deps,
)
